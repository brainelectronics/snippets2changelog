---

# this file is *not* meant to cover or endorse the use of GitHub Actions, but
# rather to help make automated releases for this project

name: Upload Python Package

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # all history is needed to crawl it properly
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - name: Install build and deploy dependencies
        run: |
          python -m pip install -U poetry twine
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry install
      - name: Update changelog with snippets
        run: |
          poetry run changelog-generator \
            changelog changelog.md \
            --snippets=.snippets
      - name: Parse changelog
        id: parse_changelog
        run: |
          poetry run changelog2version --changelog_file changelog.md.new --print | python -c "import sys, json; print(json.load(sys.stdin)['info']['description'])" > latest_description.txt
          echo 'LATEST_DESCRIPTION<<"EOT"' >> $GITHUB_OUTPUT
          cat latest_description.txt >> $GITHUB_OUTPUT
          echo '"EOT"' >> $GITHUB_OUTPUT
          latest_version=$(poetry run changelog2version --changelog_file changelog.md --print | python -c "import sys, json; print(json.load(sys.stdin)['info']['version'])")
          echo "latest_version=$latest_version" >> $GITHUB_ENV
      - name: Build package
        run: |
          poetry run changelog2version \
            --changelog_file changelog.md.new \
            --version_file snippets2changelog/version.py \
            --version_file_type py \
            --debug
          poetry build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1.5
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
          verbose: true
          print_hash: true
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.latest_version }}
          release_name: ${{ env.latest_version }}
          body: ${{ steps.parse_changelog.outputs.LATEST_DESCRIPTION }}
          draft: false
          prerelease: false
